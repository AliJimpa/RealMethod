using RealMethod;

public class #SCRIPTNAME# : CompositManager<STATESETVICE, MUSCIENUM>
{
        [Header("Music")]
        [SerializeField]
        private AudioClip[] CreateLayers;
        [SerializeField]
        private bool AddServiceOnInitiate = false;

        protected override void OnInitiate(bool AlwaysLoaded)
        {
            foreach (var clip in CreateLayers)
            {
                CreateLayer(clip);
            }
            if (AddServiceOnInitiate)
                Game.AddService<DefaulMusicState>(this);
        }
        protected override void MusicStateAssigned()
        {
        }
}

public enum MUSCIENUM
{
    Default,
    STATE_1,
    STATE_2,
}

public sealed class STATESETVICE : StateService<MUSCIENUM>
{
     public MUSCIENUM() : base(MUSCIENUM.Default) // This is the First State Value
        {

        }

        // Service Methods
        protected override void OnStart(object Author)
        {
        }
        protected override void OnEnd(object Author)
        {

        }

        // StateService Methods
        protected override DefaulMusicLayer DefaultState()
        {
            return DefaulMusicLayer.Default;
        }
        public override bool CanSwitch(DefaulMusicLayer A, DefaulMusicLayer B)
        {
            if (A == B)
            {
                return false;
            }
            return true;
        }
        protected override bool CanResetforNewWorld(World NewWorld)
        {
            return false;
        }
}